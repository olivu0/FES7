/* reset css */
body,
ul,
p {
  /* unset: margin을 없애버리겠다 */
  margin: unset;
  padding: unset;
}
h1,
h2 {
  margin: unset;
  font-size: unset;
  font-weight: unset;
}
li {
  list-style-type: none;
}
a {
  color: unset;
  text-decoration: unset;
}
/* 부모 기준 가득 차게 */
img {
  /* 부모보다 커지지 못하게 작동 */
  max-width: 100%;
  height: auto;
  /* img 밑에 공간이 남음 => 공간 없애줌 */
  vertical-align: top;
}

/* variable */
:root {
  --header-height: 300px;
  --footer-height: 60px;
}

/* Typography */
:root {
  line-height: 1.56;
}

/* layouts */
/* wrapper: 가운데 정렬 담당 */
.wrapper {
  /* box-shadow: inset 0 0 20px gold; */
  /* 사용 가능한 공간 남음 */
  /* width 고정시키면 반응형 만들 수 없음 */
  /* width: 1200px; */
  max-width: 1200px;
  padding: 0 30px;
  /* 가운데 정렬 */
  /* margin-left: auto; */
  /* margin-right: auto; */
  /* 위 두개 합해서 */
  margin: 0 auto;
}

/* flex 했더니 찌부됨 grid 로 변경 */
.grid {
  /* 컨테이닝 블록만큼 가득 찬다 */
  /* box-shadow: inset 0 0 20px red; */
  /* 부모인 grid ul이 flex-container가 됐다 */
  /* grid item(=flex-items)이 컨텐츠 크기만큼으로 줄어듬 */
  /* display: flex; */
  /* flex-wrap: wrap; */

  display: grid;
  /* 자동으로 줄어들음 */
  /* minmax: 하나가 200px 알아서 점점 커지다가 */
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 30px;
}
.grid-item {
  /* flex-basis: auto; === 컨텐츠 크기 만큼의 의미 */
  /* 여백을 삼등분해서 균등하게 나눠 가짐(원래 컨텐츠 크기 + 여백 1/3) */
  /* 균등하게 만들기 위해 basis 값을 없앰. 컨텐츠 크기와 상관 없음 */
  /* flex-basis: 0; */
  /* flex-basis: 200px;
  flex-grow: 1; */

  /* layout 잡는데 도움 받기 위해 */
  min-height: 200px;
  /* box-shadow: inset 0 0 20px blue; */

  /* min-width: auto; 초기값 컨텐츠 만큼 */
  /* 0으로 초기화 => 원래 박스 사이즈만큼으로 => 이미지가 크면 튀어나옴 */
  min-width: 0;
}

/* css style === components */
body {
  background-image: url(./images/bg.png);
  background-size: cover;
  /* 배경 이미지의 고정 여부 */
  background-attachment: fixed;
  color: white;
}

.header {
  /* 줄바꿈 안됨 */
  white-space: nowrap;
  /* 처음에는 영역을 알기 위해 좀 밝은색으로 주자 */
  background-color: #000;
  text-align: center;
  /* viewport 창의 크기에 따라 font-size가 변한다 eg) 10vw */
  font-size: 200px;
  font-weight: 700;
  line-height: 1.5;
  height: var(--header-height);

  display: flex;
  justify-content: center;
  align-items: center;

  font-family: "Lobster Two", cursive;
  font-style: italic;
  color: #555;
  word-spacing: 0;
  position: relative;
  overflow: hidden;
  transition: word-spacing 0.4s, color 0.4s;
}

.header-cover {
  /* 자기 공간 버림 viewport 기준에서 움직임(부모에 static아닌 position이 없을 때 => header에 relative 주니까 header가 새로운 기준이 됨 === 컨테이닝 블록이 됨*/
  position: absolute;
  /* left: 0; right: 0; 하면 컨테이닝블록만큼 찬다. => 이게 뭐여 */
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0 auto;
  transform: translateY(80%);
  transition: transform 0.4s;
}

.header:hover {
  word-spacing: 300px;
  color: #fff;
}

/* header에 hover 됐을 때, cover */
.header:hover .header-cover {
  transform: translateY(40%);
}

.contents {
  /* 차지하는 영역 보기 위해 */
  /* box-shadow: inset 0 0 20px red; */
  /* footer을 밑으로 붙이고 최소 높이 확보 */
  min-height: calc(100vh - (var(--header-height) + var(--footer-height)));
}

.nav {
  background-color: rgb(0 0 0 / 0.4);
  padding: 40px 0;
  backdrop-filter: blur(10px);
  /* text-align: center; */

  /* nav 스크롤 내려도 고정 */
  position: sticky;
  top: 0;
  left: 0;
}

.nav-menu {
  /* 바깥에서 보면 inilne, 내부에서는 flex */
  /* display: inline-flex; */
  display: flex;
  width: fit-content;
  margin: 0 auto;
  background-color: #333;
  border-radius: 30px;
  border-top: 1px solid #999;
  border-bottom: 2px solid #000;
  box-shadow: inset 0 0 10px 3px rgb(0 0 0 / 0.4);
  padding: 0 20px;
  color: #888;
}

.nav-menu li a {
  /* a: inline, 상하단 패딩 못 가짐 => 그래서, block으로 바꿈 */
  display: block;
  padding: 20px;
  transition: color, 0.4s;
}

.nav-menu li a:hover {
  color: #ccc;
}

.main {
  padding: 40px 0;
}

.animal {
  max-width: 300px;
  margin: 0 auto;
}

.animal-cover {
  display: block;
  margin: 0 auto;
}

.animal-contents {
  background-image: url(./images/green.png);
  /* 땅 크기 키워도 초록색 풀이 계속되게 하기 위함 */
  background-repeat: repeat-x;
  /* animal 크기가 커져도 문제 없게 만들기 위함 */
  background-position: center top;
  background-color: #93572e;
  padding: 70px 20px 40px 20px;
  border-radius: 10px 10px 30px 30px;
  border-bottom: 14px solid rgb(0 0 0 / 0.4);
}

.animal-contents h2 {
  font-size: 30px;
  font-weight: 700;
  margin-bottom: 20px;
}

.animal-contents p {
  color: #e4c2c2;
}

.footer {
  background-color: #222;
  border-top: 1px solid #888;
  /* padding: 20px 0; */
  height: var(--footer-height);
  line-height: var(--footer-height);
  text-align: center;
  color: #999;
}
